1. Install composer:

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('SHA384', 'composer-setup.php') === '55d6ead61b29c7bdee5cccfb50076874187bd9f21f65d8991d46ec5cc90518f447387fb9f76ebae1fbbacf329e583e30') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"

2. Upgrade composer:
php composer.phar self-update

3. Update project using composer:
php composer.phar update

4. Install some package and add it to composer.json:
# --dev - this option allow to save package in 'require-dev' item in composer.json
php composer.phar require --dev doctrine/data-fixtures

5. Optimize autoload:
php composer.phar dump-autoload --optimize

6. If you want to install a lot of plugins, sometimes you will have a memory error.
# Run composer with unlimited memory limit:
php -d memory_limit=-1 composer.phar update
or you can setting the env parameter
COMPOSER_MEMORY_LIMIT=-1

7. minimum-stability option:
This defines the default behavior for filtering packages by stability. This defaults to stable, so if you rely on a
dev package, you should specify it in your file to avoid surprises.

Available options (in order of stability) are dev, alpha, beta, RC, and stable.

Example:
Add "minimum-stability" : "dev" to composer.json.
